{"version":3,"file":"modal-FH3BqvZk.js","sources":["../../src/js/handlers.js","../../src/js/modal.js"],"sourcesContent":["import { refs } from '../js/refs.js';\nimport { closeModal } from './modal.js';\nimport { getCart, setCart, getWishlist, setWishlist } from './storage.js';\nimport {\n  showSuccessToast,\n  updateCartCount,\n  updateWishlistCount,\n} from './helpers.js';\nimport { renderProducts } from './render-functions.js';\n\nexport function setupModalHandlers() {\n  refs.modal.addEventListener('click', e => {\n    if (\n      e.target === refs.modal ||\n      e.target.classList.contains('modal__close-btn')\n    ) {\n      closeModal();\n    }\n  });\n}\nexport function setupCartHandlers() {\n  refs.modal.addEventListener('click', e => {\n    if (e.target.classList.contains('modal-product__btn--cart')) {\n      const productId = parseInt(\n        refs.modalProduct.querySelector('.products__item').dataset.id\n      );\n      const cart = getCart();\n\n      if (cart.includes(productId)) {\n        // Видалити з кошика\n        const updatedCart = cart.filter(id => id !== productId);\n        setCart(updatedCart);\n        e.target.textContent = 'Add to Cart';\n        showSuccessToast('Product removed from cart');\n      } else {\n        // Додати до кошика\n        setCart([...cart, productId]);\n        e.target.textContent = 'Remove from Cart';\n        showSuccessToast('Product added to cart');\n      }\n\n      updateCartCount();\n    }\n  });\n}\n\nexport function setupWishlistHandlers() {\n  refs.modal.addEventListener('click', e => {\n    if (e.target.classList.contains('modal-product__btn--wishlist')) {\n      const productId = parseInt(\n        refs.modalProduct.querySelector('.products__item').dataset.id\n      );\n      const wishlist = getWishlist();\n\n      if (wishlist.includes(productId)) {\n        // Видалити з wishlist\n        const updatedWishlist = wishlist.filter(id => id !== productId);\n        setWishlist(updatedWishlist);\n        e.target.textContent = 'Add to Wishlist';\n        showSuccessToast('Product removed from wishlist');\n      } else {\n        // Додати до wishlist\n        setWishlist([...wishlist, productId]);\n        e.target.textContent = 'Remove from Wishlist';\n        showSuccessToast('Product added to wishlist');\n      }\n\n      updateWishlistCount();\n    }\n  });\n}\n\nexport function setupScrollTopHandler() {\n  window.addEventListener('scroll', () => {\n    if (window.pageYOffset > 300) {\n      refs.scrollTopBtn.classList.add('scroll-top-btn--visible');\n    } else {\n      refs.scrollTopBtn.classList.remove('scroll-top-btn--visible');\n    }\n  });\n\n  refs.scrollTopBtn.addEventListener('click', () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  });\n\n  window.addEventListener('scroll', () => {\n    if (window.pageYOffset > 300) {\n      refs.scrollTopBtn.classList.add('scroll-top-btn--visible');\n    } else {\n      refs.scrollTopBtn.classList.remove('scroll-top-btn--visible');\n    }\n  });\n}\n\nexport function setupSearchHandlers() {\n  // Обробник очищення пошуку\n  if (refs.searchFormClearBtn) {\n    refs.searchFormClearBtn.addEventListener('click', () => {\n      refs.searchFormInput.value = '';\n      refs.searchFormClearBtn.classList.add('is-hidden');\n      // Додаткові дії при очищенні пошуку\n      currentSearchQuery = '';\n      currentPage = 1;\n      loadProducts();\n    });\n  }\n\n  // Обробник введення тексту\n  if (refs.searchFormInput) {\n    refs.searchFormInput.addEventListener('input', e => {\n      if (e.target.value.trim()) {\n        refs.searchFormClearBtn.classList.remove('is-hidden');\n      } else {\n        refs.searchFormClearBtn.classList.add('is-hidden');\n      }\n    });\n  }\n\n  // Обробник сабміту форми\n  if (refs.searchForm) {\n    refs.searchForm.addEventListener('submit', e => {\n      e.preventDefault();\n      const searchValue = refs.searchFormInput.value.trim();\n      if (searchValue) {\n        currentSearchQuery = searchValue;\n        currentPage = 1;\n        loadProducts();\n      }\n    });\n  }\n}\n\nexport function updateButtonStates(productId) {\n  const cartBtn = refs.modal.querySelector('.modal-product__btn--cart');\n  const wishlistBtn = refs.modal.querySelector('.modal-product__btn--wishlist');\n\n  if (cartBtn) {\n    const cart = getCart();\n    cartBtn.textContent = cart.includes(productId)\n      ? 'Remove from Cart'\n      : 'Add to Cart';\n    cartBtn.classList.toggle('active', cart.includes(productId));\n  }\n\n  if (wishlistBtn) {\n    const wishlist = getWishlist();\n    wishlistBtn.textContent = wishlist.includes(productId)\n      ? 'Remove from Wishlist'\n      : 'Add to Wishlist';\n    wishlistBtn.classList.toggle('active', wishlist.includes(productId));\n  }\n}\n\nexport async function handleCartAction(productId) {\n  let cart = getCart();\n  const isInCart = cart.includes(productId);\n\n  if (isInCart) {\n    cart = cart.filter(id => id !== productId);\n    showSuccessToast('Product removed from cart');\n  } else {\n    cart.push(productId);\n    showSuccessToast('Product added to cart');\n  }\n  setCart(cart);\n  updateButtonStates(productId);\n  updateCartCount();\n\n  if (window.location.href.endsWith('cart.html')) {\n    const products = await Promise.all(cart.map(id => fetchProductById(id)));\n    refs.cartProducts.innerHTML = renderProducts(products);\n  }\n}\n\nexport async function handleWishlistAction(productId) {\n  let wishlist = getWishlist();\n  const isInWishlist = wishlist.includes(productId);\n\n  if (isInWishlist) {\n    wishlist = wishlist.filter(id => id !== productId);\n    showSuccessToast('Product removed from wishlist');\n  } else {\n    wishlist.push(productId);\n    showSuccessToast('Product added to wishlist');\n  }\n\n  setWishlist(wishlist);\n  updateButtonStates(productId);\n  updateWishlistCount();\n  if (window.location.href.endsWith('wishlist.html')) {\n    const products = await Promise.all(\n      wishlist.map(id => fetchProductById(id))\n    );\n    refs.cartProducts.innerHTML = renderProducts(products);\n  }\n}\n","import { refs } from './refs.js';\nimport { fetchProductById } from './products-api.js';\nimport { renderModalProduct } from './render-functions.js';\nimport { showErrorToast } from './helpers.js';\n\nimport {\n  handleCartAction,\n  handleWishlistAction,\n  updateButtonStates,\n} from './handlers.js';\n\n// Основні функції модального вікна\nexport function openModal(productId) {\n  fetchProductById(productId)\n    .then(product => {\n      refs.modalProduct.innerHTML = renderModalProduct(product);\n      refs.modal.classList.add('modal--is-open');\n      setupModalHandlers(productId);\n      updateButtonStates(productId); // Оновлюємо стан кнопок\n    })\n    .catch(error => {\n      console.error('Error opening modal:', error);\n      showErrorToast('Failed to load product details');\n    });\n}\n\nexport function closeModal() {\n  refs.modal.classList.remove('modal--is-open');\n}\n\n// Допоміжні функції\nfunction setupModalHandlers(productId) {\n  const cartBtn = refs.modal.querySelector('.modal-product__btn--cart');\n  const wishlistBtn = refs.modal.querySelector('.modal-product__btn--wishlist');\n\n  if (cartBtn) {\n    cartBtn.addEventListener('click', () => handleCartAction(productId));\n  }\n\n  if (wishlistBtn) {\n    wishlistBtn.addEventListener('click', () =>\n      handleWishlistAction(productId)\n    );\n  }\n}\n\nupdateButtonStates();\n\n// Обробник закриття модального вікна\ndocument.addEventListener('DOMContentLoaded', () => {\n  refs.modal.addEventListener('click', e => {\n    if (\n      e.target === refs.modal ||\n      e.target.classList.contains('modal__close-btn')\n    ) {\n      closeModal();\n    }\n  });\n});\n"],"names":["updateButtonStates","productId","cartBtn","refs","wishlistBtn","cart","getCart","wishlist","getWishlist","handleCartAction","id","showSuccessToast","setCart","updateCartCount","products","renderProducts","handleWishlistAction","setWishlist","updateWishlistCount","openModal","fetchProductById","product","renderModalProduct","setupModalHandlers","error","showErrorToast","closeModal","e"],"mappings":"+GAuIO,SAASA,EAAmBC,EAAW,CAC5C,MAAMC,EAAUC,EAAK,MAAM,cAAc,2BAA2B,EAC9DC,EAAcD,EAAK,MAAM,cAAc,+BAA+B,EAE5E,GAAID,EAAS,CACX,MAAMG,EAAOC,IACbJ,EAAQ,YAAcG,EAAK,SAASJ,CAAS,EACzC,mBACA,cACJC,EAAQ,UAAU,OAAO,SAAUG,EAAK,SAASJ,CAAS,CAAC,CAC5D,CAED,GAAIG,EAAa,CACf,MAAMG,EAAWC,IACjBJ,EAAY,YAAcG,EAAS,SAASN,CAAS,EACjD,uBACA,kBACJG,EAAY,UAAU,OAAO,SAAUG,EAAS,SAASN,CAAS,CAAC,CACpE,CACH,CAEO,eAAeQ,EAAiBR,EAAW,CAChD,IAAII,EAAOC,IAcX,GAbiBD,EAAK,SAASJ,CAAS,GAGtCI,EAAOA,EAAK,OAAOK,GAAMA,IAAOT,CAAS,EACzCU,EAAiB,2BAA2B,IAE5CN,EAAK,KAAKJ,CAAS,EACnBU,EAAiB,uBAAuB,GAE1CC,EAAQP,CAAI,EACZL,EAAmBC,CAAS,EAC5BY,IAEI,OAAO,SAAS,KAAK,SAAS,WAAW,EAAG,CAC9C,MAAMC,EAAW,MAAM,QAAQ,IAAIT,EAAK,IAAIK,GAAM,iBAAiBA,CAAE,CAAC,CAAC,EACvEP,EAAK,aAAa,UAAYY,EAAeD,CAAQ,CACtD,CACH,CAEO,eAAeE,EAAqBf,EAAW,CACpD,IAAIM,EAAWC,IAcf,GAbqBD,EAAS,SAASN,CAAS,GAG9CM,EAAWA,EAAS,OAAOG,GAAMA,IAAOT,CAAS,EACjDU,EAAiB,+BAA+B,IAEhDJ,EAAS,KAAKN,CAAS,EACvBU,EAAiB,2BAA2B,GAG9CM,EAAYV,CAAQ,EACpBP,EAAmBC,CAAS,EAC5BiB,IACI,OAAO,SAAS,KAAK,SAAS,eAAe,EAAG,CAClD,MAAMJ,EAAW,MAAM,QAAQ,IAC7BP,EAAS,IAAIG,GAAM,iBAAiBA,CAAE,CAAC,CAC7C,EACIP,EAAK,aAAa,UAAYY,EAAeD,CAAQ,CACtD,CACH,CC1LO,SAASK,EAAUlB,EAAW,CACnCmB,EAAiBnB,CAAS,EACvB,KAAKoB,GAAW,CACflB,EAAK,aAAa,UAAYmB,EAAmBD,CAAO,EACxDlB,EAAK,MAAM,UAAU,IAAI,gBAAgB,EACzCoB,EAAmBtB,CAAS,EAC5BD,EAAmBC,CAAS,CAClC,CAAK,EACA,MAAMuB,GAAS,CACd,QAAQ,MAAM,uBAAwBA,CAAK,EAC3CC,EAAe,gCAAgC,CACrD,CAAK,CACL,CAEO,SAASC,GAAa,CAC3BvB,EAAK,MAAM,UAAU,OAAO,gBAAgB,CAC9C,CAGA,SAASoB,EAAmBtB,EAAW,CACrC,MAAMC,EAAUC,EAAK,MAAM,cAAc,2BAA2B,EAC9DC,EAAcD,EAAK,MAAM,cAAc,+BAA+B,EAExED,GACFA,EAAQ,iBAAiB,QAAS,IAAMO,EAAiBR,CAAS,CAAC,EAGjEG,GACFA,EAAY,iBAAiB,QAAS,IACpCY,EAAqBf,CAAS,CACpC,CAEA,CAEAD,IAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDG,EAAK,MAAM,iBAAiB,QAASwB,GAAK,EAEtCA,EAAE,SAAWxB,EAAK,OAClBwB,EAAE,OAAO,UAAU,SAAS,kBAAkB,IAE9CD,GAEN,CAAG,CACH,CAAC"}